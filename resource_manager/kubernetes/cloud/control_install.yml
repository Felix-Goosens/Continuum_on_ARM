---
- hosts: cloudcontroller
  become: true
  tasks:
  - name: stop unattended-upgrades
    command: systemctl stop unattended-upgrades

  - name: add ip route
    command: ip route add default via 192.168.0.1 dev ens2
    when: ansible_architecture == "x86_64"

  - name: add ip route
    command: ip route add default via 192.168.0.1 dev enp2s1
    when: ansible_architecture == "aarch64"

  - name: Ensure docker service is running
    systemd:
      name: docker
      state: started
  
  - name: Add cloud user to docker group
    user:
      name: "{{ username }}"
      group: docker

  - name: Restart docker service
    command: systemctl restart docker

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ cloud_ip }}
      create: true

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: true
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address={{ cloud_ip }} --apiserver-cert-extra-sans={{ cloud_ip }}  --node-name cloud-master --pod-network-cidr=10.244.0.0/16

  - name: Create user Kubernetes directory
    file:
      path: "/home/{{ username }}/.kube"
      state: directory
  
  - name: Copy Kubernetes files to user
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "/home/{{ username }}/.kube/config"
      owner: "{{ username }}"
      group: "{{ username }}"
      remote_src: true

  - name: Enable networking with Calico, only for cloud mode
    shell: |
      if [ "{{ cloud_mode }}" -gt "0" ]; then
        kubectl create --kubeconfig="/home/{{ username }}/.kube/config" -f /kube-flannel.yml
      fi

  - name: Create join command for worker nodes (cloud-only)
    shell: |
      echo '#!/bin/bash' > /tmp/join-command.txt
      kubeadm token create --kubeconfig="/home/{{ username }}/.kube/config" --print-join-command >> /tmp/join-command.txt

  - name: Copy join command to local file
    fetch: 
      src: /tmp/join-command.txt 
      dest: /tmp/
      flat: true

  - name: Remove unneeded Kubernetes join command file
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /tmp/join-command.txt 

  handlers:
    - name: docker status
      service: name=docker state=started
